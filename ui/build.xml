<!--===========================================================================
  This is the build file for the Pentaho Data Integration (Kettle) core module.
  
  This build file will use the subfloor.xml file as the default build
  process and should only override the tasks that need to differ from
  the common build file.
  
  See common_build.xml for more details
============================================================================-->
<project name="kettle-ui-swt" basedir="." default="default">

  <description>
    This build file is used to create the Kettle UI module
    and works with the subfloor.xml file.
  </description>

  <!-- The continuous target is used by CI ... this is the list of -->
  <!-- tasks that the CI machine will run.                         -->
  <!-- DO NOT change the CI machine's ant task .. change this list -->
  <target name="continuous" 
          depends="clean-all,resolve,publish" />

  <!-- Import the common_build.xml file which contains all the default tasks -->
  <import file="build-res/subfloor.xml"/>

  <!--
    AS STATED ABOVE, THE ONLY TASKS THAT SHOULD EXIST IN THIS BUILD FILE ARE
    THE TASKS THAT NEED TO DIFFER FROM THE DEFAULT IMPLEMENTATION OF THE TASKS
    FOUND IN common_build.xml.
  -->

  <target name="default" depends="clean,init,resolve,dist"/>
      
  <target name="create-dot-classpath" depends="init,resolve,subfloor.create-dot-classpath"/>
	
  <target name="compile.res_copy" depends="install-antcontrib">
    <if>
      <available file="${res.dir}" />
      <then>
        <copy todir="${classes.dir}">
          <fileset dir="${res.dir}" />
        </copy>
      </then>
    </if>
    
    <copy todir="${classes.dir}">
        <fileset dir="package-res" />
    </copy>
    <copy todir="${classes.dir}">
        <fileset dir="../assembly/package-res/classes" includes="*.xml"/>
    </copy>
    <copy todir="${classes.dir}/ui">
        <fileset dir="${ui}" includes="laf.properties"/>
    </copy>
    <copy todir="${classes.dir}/ui">
        <fileset dir="${ui}" includes="*.xul"/>
    </copy>
    <copy todir="./docs">
        <fileset dir="../assembly/package-res/docs" includes="**/*"/>
    </copy>

    <if>
      <not>
        <isset property="jar.include.source" />
      </not>
      <then>
        <copy todir="${classes.dir}" flatten="false">
          <fileset dir="${src.dir}" excludes="**/*.java" />
        </copy>
      </then>
    </if>
  </target>

  <target name="war" depends="clean-all,resolve,dist">
    <copy todir="${lib.dir}">
      <fileset file="${dist.dir}/${ivy.artifact.id}-${project.revision}.jar"/>
    </copy>
    <war destfile="${dist.dir}/spoon.war" webxml="WEB-INF/web.xml">
      <lib dir="${lib.dir}">
        <exclude name="javax.servlet-api-*.jar"/>
      </lib>
      <classes dir="${classes.dir}">
        <include name="*.xml"/>
      </classes>
      <fileset file="OSS_Licenses.html"/>
      <zipfileset dir="docs" prefix="docs"/>
    </war>
  </target>

</project>
